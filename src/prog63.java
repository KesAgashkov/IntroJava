import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

//üìî 1. –ü—Ä–æ–¥—É–º–∞–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞—Å—Å–∞ –ö–æ—Ç. –ö–∞–∫–∏–µ –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã –±—É–¥—É—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã –¥–ª—è
//  –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —è–≤–ª—è–µ—Ç—Å—è
// –∞) –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∏–Ω–∏–∫–∏

// –ú–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ, –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –≤ java.

// 1. –†–µ–∞–ª–∏–∑—É–π—Ç–µ 1 –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–ª–∞—Å—Å–∞ Cat –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è, 
// –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ –≤—Å–µ –ø—Ä–∏–¥—É–º–∞–Ω–Ω—ã–µ –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã. 
// –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞, –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.

// 2. –î–æ–±–µ–π—Ç–µ—Å—å —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏ –≤—ã–≤–æ–¥–µ –≤ –∫–æ–Ω—Å–æ–ª—å –æ–±—ä–µ–∫—Ç–∞ —Ç–∏–ø–∞ Cat, –≤—ã–≤–æ–¥–∏–ª–∞—Å—å –µ–≥–æ –∫–ª–∏—á–∫–∞, 
// —Ü–≤–µ—Ç –∏ –≤–æ–∑—Ä–∞—Å—Ç (–∏–ª–∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ –≤–∞—à–µ —É—Å–º–æ—Ç—Ä–µ–Ω–∏–µ).

// 1. –°–æ–∑–¥–∞–π—Ç–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ Cat - HashSet<Cat>. 
// –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ–≥–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤.

// 2. –°–æ–∑–¥–∞–π—Ç–µ 2 –∏–ª–∏ –±–æ–ª–µ–µ –∫–æ—Ç–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ –ø–æ–ª—è—Ö. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.
// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –æ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ.

// 3. –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥

// **public boolean**
// equals(Object o)
// –ü—Ä–æ–ø–∏—à–∏—Ç–µ –≤ –Ω—ë–º –ª–æ–≥–∏–∫—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ—Ç–æ–≤ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —Ö—Ä–∞–Ω–∏–º—ã–º –≤ –ø–æ–ª—è—Ö. 
// –¢–æ –µ—Å—Ç—å, –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å true, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –ø–æ–ª—è—Ö —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Ä–∞–≤–Ω—ã.

// 4. –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥
// **public int hashCode()**
// –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å hash, –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª–µ–π –∫–ª–∞—Å—Å–∞ Cat. (–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Objects.hash(...))
// 5. –í—ã–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏–∑ –ø—É–Ω–∫—Ç–∞ 2, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª–∏–ª–∏—Å—å.

//public class prog63 {
//    public static void main(String[] args) {
//        Cat cat = new Cat();
//        cat.id = 0001;
//        cat.name = "–ë–∞—Ä—Å–∏–∫";
//        cat.breed = "—Å–∏–±–∏—Ä—Å–∫–∏–π";
//        cat.age = 1;
//        cat.color = "—Å–µ—Ä—ã–π";
//        cat.ownerName = "–°–µ—Ä–≥–µ–π";
//
//        Cat cat2 = new Cat();
//        cat2.id = 0001;
//        cat2.name = "–ë–∞—Ä—Å–∏–∫";
//        cat2.breed = "—Å–∏–±–∏—Ä—Å–∫–∏–π";
//        cat2.age = 1;
//        cat2.color = "—Å–µ—Ä—ã–π";
//        cat2.ownerName = "–°–µ—Ä–≥–µ–π";
//
//        Cat cat3 = new Cat();
//        cat3.id = 0003;
//        cat3.name = "–í–∞—Å—å–∫–∞";
//        cat3.breed = "–¥–≤–æ—Ä–æ–≤—ã–π";
//        cat3.age = 7;
//        cat3.color = "—Ä—ã–∂–∏–π";
//        cat3.ownerName = "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞";
//
//        Cat cat4 = new Cat();
//        cat4.id = 0003;
//        cat4.name = "–í–∞—Å—å–∫–∞";
//        cat4.breed = "–¥–≤–æ—Ä–æ–≤—ã–π";
//        cat4.age = 7;
//        cat4.color = "—Ä—ã–∂–∏–π";
//        cat4.ownerName = "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞";
//
//        //System.out.println(cat.toString());
//        //System.out.println(cat2.toString());
//
//        HashSet<Cat> cats = new HashSet<>();
//        cats = new HashSet<Cat>(Arrays.asList(cat, cat2, cat3, cat4 ));
//        //cats.add(cat);
//
//
//        System.out.println(cat.equals(cat2));
//        System.out.println(cat.equals(cat3));
//        System.out.println(cat2.equals(cat4));
//
//        System.out.println(cat.hashCode());
//        System.out.println(cat2.hashCode());
//        System.out.println(cat3.hashCode());
//        System.out.println(cat4.hashCode());
//
//
//        System.out.println(cats);
//    }
//
//}


